#include <iostream>
#include<bits/stdc++.h>
using namespace std;

/*
6
12 2 4 5 14 45
*/
class minheap{
    private:
        int *arr;
        int capacity;

    public:
        int size;
        minheap(int c)
        {
            size=0;
            capacity=c;
            arr=new int[c];

        }
        int left(int i){ return 2*i + 1 ;}
        int right(int i){ return 2*i + 2 ;}
        int parent(int i){ return (i-1)/2 ;}
       void insertKey(int x){
            if(size==capacity){
                return;
            }
            size++;
            int i=size-1;
            arr[i]=x;
         
            while(i!= 0 && arr[parent(i)] > arr[i]){
                swap(arr[i],arr[parent(i)]);
                i=parent(i);
            }
        }
        void show(){
            for(int i=0;i<size;i++){
                cout<<arr[i]<<" ";
            }
            cout<<endl;
        }
        void minheapify(int i);
};
void minheap :: minheapify(int i){
    int lt=left(i);
    int rt=right(i);
    int smallest=i;
    if(arr[lt]<arr[i] && lt<size){
        smallest=lt;
    }
    if(arr[rt]<arr[smallest] && rt<size){
        smallest=rt;
    }
    if(smallest!=i){ // checks if smallest is changed to lt , rt or not
        swap(arr[i],arr[smallest]);
        minheapify(smallest);
    }
}
int main()
{
    minheap h(100);
    int n;
    cin>>n;
    int r;
    for(int i=0;i<n;i++){
        cin>>r;
        h.insertKey(r);
    }
    h.show();
    h.insertKey(7);
    h.show();
   return 0;
}
